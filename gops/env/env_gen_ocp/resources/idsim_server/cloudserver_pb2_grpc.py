# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from gops.env.env_gen_ocp.resources.idsim_server import cloudserver_pb2 as idsim__server_dot_cloudserver__pb2


class IdSimServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitIdSim = channel.unary_unary(
                '/cloundserver.IdSimService/InitIdSim',
                request_serializer=idsim__server_dot_cloudserver__pb2.InitIdSimRequest.SerializeToString,
                response_deserializer=idsim__server_dot_cloudserver__pb2.InitIdSimResponse.FromString,
                )
        self.ResetIdSim = channel.unary_unary(
                '/cloundserver.IdSimService/ResetIdSim',
                request_serializer=idsim__server_dot_cloudserver__pb2.ResetIdSimRequest.SerializeToString,
                response_deserializer=idsim__server_dot_cloudserver__pb2.ResetIdSimResponse.FromString,
                )
        self.GetMultilaneIdsimcontext = channel.unary_unary(
                '/cloundserver.IdSimService/GetMultilaneIdsimcontext',
                request_serializer=idsim__server_dot_cloudserver__pb2.GetMultilaneIdsimcontextRequest.SerializeToString,
                response_deserializer=idsim__server_dot_cloudserver__pb2.GetMultilaneIdsimcontextResponse.FromString,
                )
        self.GetCrossroadIdsimcontext = channel.unary_unary(
                '/cloundserver.IdSimService/GetCrossroadIdsimcontext',
                request_serializer=idsim__server_dot_cloudserver__pb2.GetCrossroadIdsimcontextRequest.SerializeToString,
                response_deserializer=idsim__server_dot_cloudserver__pb2.GetCrossroadIdsimcontextResponse.FromString,
                )
        self.GetModelFreeRewardDetails = channel.unary_unary(
                '/cloundserver.IdSimService/GetModelFreeRewardDetails',
                request_serializer=idsim__server_dot_cloudserver__pb2.GetModelFreeRewardDetailsRequest.SerializeToString,
                response_deserializer=idsim__server_dot_cloudserver__pb2.GetModelFreeRewardDetailsResponse.FromString,
                )
        self.StepIdsim = channel.unary_unary(
                '/cloundserver.IdSimService/StepIdsim',
                request_serializer=idsim__server_dot_cloudserver__pb2.StepIdsimRequest.SerializeToString,
                response_deserializer=idsim__server_dot_cloudserver__pb2.StepIdsimResponse.FromString,
                )
        self.Close = channel.unary_unary(
                '/cloundserver.IdSimService/Close',
                request_serializer=idsim__server_dot_cloudserver__pb2.CloseRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class IdSimServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitIdSim(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetIdSim(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMultilaneIdsimcontext(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCrossroadIdsimcontext(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelFreeRewardDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StepIdsim(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdSimServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitIdSim': grpc.unary_unary_rpc_method_handler(
                    servicer.InitIdSim,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.InitIdSimRequest.FromString,
                    response_serializer=idsim__server_dot_cloudserver__pb2.InitIdSimResponse.SerializeToString,
            ),
            'ResetIdSim': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetIdSim,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.ResetIdSimRequest.FromString,
                    response_serializer=idsim__server_dot_cloudserver__pb2.ResetIdSimResponse.SerializeToString,
            ),
            'GetMultilaneIdsimcontext': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMultilaneIdsimcontext,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.GetMultilaneIdsimcontextRequest.FromString,
                    response_serializer=idsim__server_dot_cloudserver__pb2.GetMultilaneIdsimcontextResponse.SerializeToString,
            ),
            'GetCrossroadIdsimcontext': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCrossroadIdsimcontext,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.GetCrossroadIdsimcontextRequest.FromString,
                    response_serializer=idsim__server_dot_cloudserver__pb2.GetCrossroadIdsimcontextResponse.SerializeToString,
            ),
            'GetModelFreeRewardDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelFreeRewardDetails,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.GetModelFreeRewardDetailsRequest.FromString,
                    response_serializer=idsim__server_dot_cloudserver__pb2.GetModelFreeRewardDetailsResponse.SerializeToString,
            ),
            'StepIdsim': grpc.unary_unary_rpc_method_handler(
                    servicer.StepIdsim,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.StepIdsimRequest.FromString,
                    response_serializer=idsim__server_dot_cloudserver__pb2.StepIdsimResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=idsim__server_dot_cloudserver__pb2.CloseRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloundserver.IdSimService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IdSimService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitIdSim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/InitIdSim',
            idsim__server_dot_cloudserver__pb2.InitIdSimRequest.SerializeToString,
            idsim__server_dot_cloudserver__pb2.InitIdSimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetIdSim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/ResetIdSim',
            idsim__server_dot_cloudserver__pb2.ResetIdSimRequest.SerializeToString,
            idsim__server_dot_cloudserver__pb2.ResetIdSimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMultilaneIdsimcontext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/GetMultilaneIdsimcontext',
            idsim__server_dot_cloudserver__pb2.GetMultilaneIdsimcontextRequest.SerializeToString,
            idsim__server_dot_cloudserver__pb2.GetMultilaneIdsimcontextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCrossroadIdsimcontext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/GetCrossroadIdsimcontext',
            idsim__server_dot_cloudserver__pb2.GetCrossroadIdsimcontextRequest.SerializeToString,
            idsim__server_dot_cloudserver__pb2.GetCrossroadIdsimcontextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelFreeRewardDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/GetModelFreeRewardDetails',
            idsim__server_dot_cloudserver__pb2.GetModelFreeRewardDetailsRequest.SerializeToString,
            idsim__server_dot_cloudserver__pb2.GetModelFreeRewardDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StepIdsim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/StepIdsim',
            idsim__server_dot_cloudserver__pb2.StepIdsimRequest.SerializeToString,
            idsim__server_dot_cloudserver__pb2.StepIdsimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cloundserver.IdSimService/Close',
            idsim__server_dot_cloudserver__pb2.CloseRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
